---
name: Tests

on:
  pull_request:
    branches:
      - main

jobs:
  goreleaser:
    name: Build with goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          check-latest: true

      - name: Install build dependencies
        run: |
          sudo apt -y install clang linux-tools-common linux-tools-$(uname -r) llvm

      - name: Set build date
        run: |
          echo "BUILD_DATE=$(date)" >> ${GITHUB_ENV}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --skip=publish --snapshot
        env:
          BUILD_USER: ${{ github.actor }} (via Github Actions)

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tc-cpumap
          path: dist/

  codechecks:
    name: Code checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"
          check-latest: true

      - name: Install build dependencies
        run: |
          sudo apt -y install clang linux-tools-common linux-tools-$(uname -r) llvm

      - name: Bootstrap
        run: ./boot.sh

      - name: Lint
        uses: golangci/golangci-lint-action@v6
        with:
          args: --out-format=github-actions,line-number

      - name: Govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-file: "go.mod"
          cache: false
          repo-checkout: false
